.\" Man page generated from reStructuredText.
.
.TH "BSON_VALIDATE" "3" "May 23, 2017" "1.6.3" "Libbson"
.SH NAME
bson_validate \- bson_validate()
.
.nr rst2man-indent-level 0
.
.de1 rstReportMargin
\\$1 \\n[an-margin]
level \\n[rst2man-indent-level]
level margin: \\n[rst2man-indent\\n[rst2man-indent-level]]
-
\\n[rst2man-indent0]
\\n[rst2man-indent1]
\\n[rst2man-indent2]
..
.de1 INDENT
.\" .rstReportMargin pre:
. RS \\$1
. nr rst2man-indent\\n[rst2man-indent-level] \\n[an-margin]
. nr rst2man-indent-level +1
.\" .rstReportMargin post:
..
.de UNINDENT
. RE
.\" indent \\n[an-margin]
.\" old: \\n[rst2man-indent\\n[rst2man-indent-level]]
.nr rst2man-indent-level -1
.\" new: \\n[rst2man-indent\\n[rst2man-indent-level]]
.in \\n[rst2man-indent\\n[rst2man-indent-level]]u
..
.SH SYNOPSIS
.INDENT 0.0
.INDENT 3.5
.sp
.nf
.ft C
typedef enum {
   BSON_VALIDATE_NONE = 0,
   BSON_VALIDATE_UTF8 = (1 << 0),
   BSON_VALIDATE_DOLLAR_KEYS = (1 << 1),
   BSON_VALIDATE_DOT_KEYS = (1 << 2),
   BSON_VALIDATE_UTF8_ALLOW_NULL = (1 << 3),
   BSON_VALIDATE_EMPTY_KEYS = (1 << 4),
} bson_validate_flags_t;

bool
bson_validate (const bson_t *bson, bson_validate_flags_t flags, size_t *offset);
.ft P
.fi
.UNINDENT
.UNINDENT
.SH PARAMETERS
.INDENT 0.0
.IP \(bu 2
\fBbson\fP: A \fBbson_t\fP\&.
.IP \(bu 2
\fBflags\fP: A bitwise\-or of all desired \fBbson_validate_flags_t\fP\&.
.IP \(bu 2
\fBoffset\fP: A location for the offset within \fBbson\fP where the error ocurred.
.UNINDENT
.SH DESCRIPTION
.sp
Validates a BSON document by walking through the document and inspecting the fields for valid content.
.sp
You can modify how the validation occurs through the use of the \fBflags\fP parameter. A description of their effect is below.
.INDENT 0.0
.IP \(bu 2
\fBBSON_VALIDATE_UTF8\fP will request that all UTF\-8 strings are checked to contain valid UTF\-8 sequences. This is expensive and disabled by default.
.IP \(bu 2
\fBBSON_VALIDATE_UTF8_ALLOW_NULL\fP will specify that UTF\-8 strings are allowed to have embedded NULL bytes. Many UTF\-8 implementations use a 2\-byte squence for embedded NULLs so that they work with stanard libc functions. Libbson expects this by default.
.IP \(bu 2
\fBBSON_VALIDATE_DOLLAR_KEYS\fP will request that all key names are checked to ensure they do not start with the ASCII dollar character (\fB$\fP).
.IP \(bu 2
\fBBSON_VALIDATE_DOT_KEYS\fP will request that all key names are checked to ensure they do not contain an ASCII dot (\fB\&.\fP) character.
.IP \(bu 2
\fBBSON_VALIDATE_EMPTY_KEYS\fP will request that zero\-length key names are prohibited.
.UNINDENT
.SH RETURNS
.sp
Returns true if \fBbson\fP is valid; otherwise false and \fBoffset\fP is set to the byte offset where the error was detected.
.SH AUTHOR
MongoDB, Inc
.SH COPYRIGHT
2017, MongoDB, Inc
.\" Generated by docutils manpage writer.
.
